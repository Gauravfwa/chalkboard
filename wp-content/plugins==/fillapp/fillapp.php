<?php/*Plugin Name: Clarendon Drawing ToolVersion: 1.0Description: Drawing Tool Developed by Clarendon Technologies Inc.Author: David MacNeillLicense: GPL*/define("CLARENDON_DRAW_DIR", $_SERVER['DOCUMENT_ROOT']. '/wp-content/plugins/fillapp/' );function clarendon_draw_init() {	echo "<link rel='stylesheet' href='/wp-content/plugins/fillapp/main.css' />";	/*  $src = CLARENDON_DRAW_DIR . 'main.css';  wp_register_style('clarendon_draw-style',$src);	  $scriptsrc = CLARENDON_DRAW_DIR . 'app.js';  wp_register_script('clarendon_draw-script',$scriptsrc);	*/    echo "<canvas id=\"drawing-canvas\"></canvas>";	  echo "	<div id=\"tools\">		<div id=\"clear-button\"></div>		<div class=\"color erase\" data-color=\"255,255,255\"></div>		<div class=\"color aqua selected\" data-color=\"106,199,185\"></div>		<div class=\"color darkblue\" data-color=\"31,40,93\"></div>		<div class=\"color green\" data-color=\"98,169,69\"></div>		<div class=\"color medblue\" data-color=\"79,136,161\"></div>		<div class=\"color orange\" data-color=\"247,168,27\"></div>		<div class=\"color red\" data-color=\"197,32,51\"></div>		<div class=\"color yellow\" data-color=\"245,237,95\"></div></div>";	echo "<script type=\"text/javascript\" src=\"/wp-content/plugins/fillapp/app.js\" />";		}add_shortcode('ClarendonDraw', 'clarendon_draw_init');function chalkboardSketch($imgID){if(is_user_logged_in()){	echo "<script src='/wp-content/plugins/fillapp/paper.js' /></script>";	echo "<script src='/wp-content/plugins/fillapp/main.js?v=3' /></script>";	echo "<link rel='stylesheet' href='/wp-content/plugins/fillapp/main.css?v=1' />";	// $img_atts = wp_get_attachment_image_src( get_post_thumbnail_id(), $default );	$img_src = get_the_post_thumbnail_url();	$url_parse = wp_parse_url($img_src);	$img_src = "//".$_SERVER['HTTP_HOST'] . $url_parse['path'];	echo "<div class='linkCon'>";	echo "<div class='colorCon'>";	echo "<div class='color'><input id='#000' name='colorRadio' type='radio' value='#000'><label for='#000'  style='background-color: #000;'></label></div>";	echo "<div class='color'><input id='#A52A2A' name='colorRadio' type='radio' value='#A52A2A'><label for='#A52A2A'  style='background-color: #A52A2A;'></label></div>";	echo "<div class='color'><input id='#FF0000' name='colorRadio' type='radio' value='#FF0000'><label for='#FF0000' style='background-color: #FF0000;'></label></div>";	echo "<div class='color'><input id='#FFA500' name='colorRadio' type='radio' value='#FFA500'><label for='#FFA500' style='background-color: #FFA500;'></label></div>";	echo "<div class='color'><input id='#FFFF00' name='colorRadio' type='radio' value='#FFFF00'><label for='#FFFF00' style='background-color: #FFFF00;'></label></div>";	echo "<div class='color'><input id='#008000' name='colorRadio' type='radio' value='#008000'><label for='#008000' style='background-color: #008000;'></label></div>";	echo "<div class='color'><input id='#0000FF' name='colorRadio' type='radio' value='#0000FF'><label for='#0000FF' style='background-color: #0000FF;'></label></div>";	echo "<div class='color'><input id='#4B0082' name='colorRadio' type='radio' value='#4B0082'><label for='#4B0082' style='background-color: #4B0082;'></label></div>";	echo "<div class='color'><input id='#EE82EE' name='colorRadio' type='radio' value='#EE82EE'><label for='#EE82EE' style='background-color: #EE82EE;'></label></div>";	echo "</div>";	echo "<input type=\"color\" id=\"favcolor\" name=\"favcolor\" value=\"#ff0000\">";	echo "<input type=\"hidden\" id=\"hiddenColor\" name=\"hiddenColor\" value=\"#ff0000\">";	// echo "<a href=\"#\" class='clearCanvas' id='clearCanvas'>Clear </a>";	echo "<label class='fillBtn'><input type='checkbox' class='fillSet'> <span> Fill </span> </label>";	echo "<a href=\"#\" class='clearCanvas' id='clearCanvas'>Clear </a>";	// echo "<a href=\"#\" class='saveClick'> Save </a>";	$current_url = "//".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	echo "<a href=\"#\" onclick='javascript: window.print();' class='printClick'> Print </a>";	// $client = clientInfo();	// if(isset($client))	// {	// 	$currentToken = get_user_meta(get_current_user_id(), "classroom_token", true);		// 	$assigned = true;	// 	if(isset($currentToken) && $currentToken != ""){	// 		$accessToken = $currentToken;	// 		$client->setAccessToken($accessToken);	// 		$service = new Google_Service_Classroom($client);		// 		$optParams = array(	// 		  'pageSize' => 10,	// 		);	// 		$results = $service->courses->listCourses($optParams);	// 		$userProfiles = $service->userProfiles->get("me");	// 		$current_url= "//".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	// 		foreach ($results->getCourses() as $course) {	// 			foreach ($currentCourseWork = $service->courses_courseWork->listCoursesCourseWork($course->getId()) as $cw) {	// 				if($cw->associatedWithDeveloper && $cw->title == 'Drawing Assignment'){	// 					print_r($cw);	// 				}	// 			}						// 		}		// 	}	// }	echo "<a class='saveClick'> Submit </a>";	// echo "<a href=\"".$current_url."?submit=send\" class='printClick'> Complete </a>";	echo "</div>";	if($_GET['submit'] == 'sent'){		echo "<h3 style='color: green; text-align: center; font-size: 20px; border: none;'>Thank you! Your work has been submitted to your teacher.</h3>";	}			echo "<form id='baseImageForm' method='post'>";	echo "<input type='hidden' name='baseImage' class='baseImage'>";	echo "</form>";	echo "<div class='canvasCon'>";	echo "<canvas id=\"canvas\"></canvas>";	echo "<div class='hiddenImage'><img src='".$img_src."' id='image'></div>";	echo "</div>";	if($_SERVER['REQUEST_METHOD'] == 'POST')	{		$baseImage = $_POST['baseImage'];		$imageLink = uploadImage($baseImage);		// echo " base image " . $imageLink;		$imageUrl = wp_get_attachment_image_src($imageLink)[0];		// print_r(wp_get_attachment_image_src(12679));				SendToClassroom($imageUrl);		$urlLink = strtok($_SERVER["REQUEST_URI"], '?');				echo "<script>window.location.replace('".$urlLink."?submit=sent');</script>";		}		// echo wp_get_attachment_image_src(12679)[0];}	}add_shortcode('chalkboardSketch', 'chalkboardSketch');function uploadImage($baseImage){	$title = strtolower(str_replace(' ', '_', get_the_title()));	$image = base64_decode(preg_replace('#^data:image/\w+;base64,#i', '', $baseImage));	$current_user = wp_get_current_user();	// echo $image;	// echo "title " . $title . " current username " . $current_user->user_login;	$imageTitle = $title . "_" . $current_user->user_login;        //HANDLE UPLOADED FILE    $upload_dir = wp_upload_dir();    $upload_path = str_replace( '/', DIRECTORY_SEPARATOR, $upload_dir['path'] ) . DIRECTORY_SEPARATOR;    $image_parts = explode(";base64,",$baseImage);    $decoded = base64_decode($image_parts[1]);    $filename = $imageTitle . '.png';   $hashed_filename = md5( $filename . microtime() ) . '_' . $filename;    $image_upload = file_put_contents( $upload_path . $hashed_filename, $decoded );     require_once(ABSPATH . 'wp-admin/includes/image.php');    require_once(ABSPATH . 'wp-admin/includes/media.php');    require_once(ABSPATH . 'wp-admin/includes/file.php');        // Without that I'm getting a debug error!?        $file             = array();        $file['error']    = '';        $file['tmp_name'] = $upload_path . $hashed_filename;        $file['name']     = $hashed_filename;        $file['type']     = 'image/png';        $file['size']     = filesize( $upload_path . $hashed_filename );        // upload file to server        // use $file instead of $image_upload        $file_return = wp_handle_sideload( $file, array( 'test_form' => false ) );        $filename = $file_return['file'];        $attachment = array(                                             'post_mime_type' => $file_return['type'],                                             'post_title' => preg_replace('/\.[^.]+$/', '', basename($filename)),                                             'post_content' => '',                                             'post_status' => 'inherit',                                             'guid' => $wp_upload_dir['url'] . '/' . basename($filename)                                             );        $attach_id = wp_insert_attachment( $attachment, $filename );        /// generate thumbnails of newly uploaded image        // $attachment_meta = wp_generate_attachment_metadata($attach_id, $filename );        // wp_update_attachment_metadata($attach_id,$attachment_meta);        // set_post_thumbnail($post_id,$attach_id);	// 	// Upload dir.	// $upload_dir  = wp_upload_dir();	// $upload_path = str_replace( '/', DIRECTORY_SEPARATOR, $upload_dir['path'] ) . DIRECTORY_SEPARATOR;	// $img             = str_replace( 'data:image/jpeg;base64,', '', $image );	// $img             = str_replace( ' ', '+', $img );	// $decoded         = base64_decode( $img );	// $filename        = $imageTitle . '.jpeg';	// $file_type       = 'image/jpeg';	// $hashed_filename = md5( $filename . microtime() ) . '_' . $filename;	// // Save the image in the uploads directory.	// $upload_file = file_put_contents( $upload_path . $hashed_filename, $decoded );	// $attachment = array(	// 	'post_mime_type' => $file_type,	// 	'post_title'     => preg_replace( '/\.[^.]+$/', '', basename( $hashed_filename ) ),	// 	'post_content'   => '',	// 	'post_status'    => 'inherit',	// 	'guid'           => $upload_dir['url'] . '/' . basename( $hashed_filename )	// );	// $attach_id = wp_insert_attachment( $attachment, $upload_dir['path'] . '/' . $hashed_filename );	// $upload_dir = wp_upload_dir();	// $image = base64_decode(preg_replace('#^data:image/\w+;base64,#i', '', $baseImage));	// // @new	// $upload_path = str_replace( '/', DIRECTORY_SEPARATOR, $upload_dir['path'] ) . DIRECTORY_SEPARATOR;	// $decoded = $image;	// $filename = $imageTitle;	// $hashed_filename = md5( $filename . microtime() ) . '_' . $filename;	// // @new	// $image_upload = file_put_contents( $upload_path . $hashed_filename, $decoded );	// //HANDLE UPLOADED FILE	// if( !function_exists( 'wp_handle_sideload' ) ) {	//   require_once( ABSPATH . 'wp-admin/includes/file.php' );	// }	// // Without that I'm getting a debug error!?	// if( !function_exists( 'wp_get_current_user' ) ) {	//   require_once( ABSPATH . 'wp-includes/pluggable.php' );	// }	// // @new	// $file             = array();	// $file['error']    = '';	// $file['tmp_name'] = $upload_path . $hashed_filename;	// $file['name']     = $hashed_filename;	// $file['type']     = 'image/png';	// $file['size']     = filesize( $upload_path . $hashed_filename );	// // upload file to server	// // @new use $file instead of $image_upload	// $file_return = wp_handle_sideload( $file, array( 'test_form' => false ) );	// $filename = $file_return['file'];	// $attachment = array(	//  'post_mime_type' => $file_return['type'],	//  'post_title' => preg_replace('/\.[^.]+$/', '', basename($filename)),	//  'post_content' => '',	//  'post_status' => 'inherit',	//  'guid' => $wp_upload_dir['url'] . '/' . basename($filename)	//  );	// $attach_id = wp_insert_attachment( $attachment, $filename );	return $attach_id;}function clientInfo(){	global $wpdb, $wp;	ini_set('display_errors', 1); ini_set('display_startup_errors', 1); error_reporting(E_ALL);		require CLARENDON_CC_DIR . 'gapi/vendor/autoload.php';    $client = new Google_Client();    $client->setApplicationName('Chalkboard Publishing');    $client->setScopes(array(Google_Service_Classroom::CLASSROOM_COURSES,Google_Service_Classroom::CLASSROOM_ROSTERS,Google_Service_Classroom::CLASSROOM_TOPICS,Google_Service_Classroom::CLASSROOM_COURSEWORK_STUDENTS,Google_Service_Classroom::CLASSROOM_COURSEWORK_ME));    $client->setAuthConfig($_SERVER['DOCUMENT_ROOT'].'/wp-content/plugins/clarendon-gapi/credentials.json');    $client->setAccessType('offline');    $client->setPrompt('select_account consent');    return $client;}function SendToClassroom($imageUrl){	global $wpdb, $wp;	// ini_set('display_errors', 1); ini_set('display_startup_errors', 1); error_reporting(E_ALL);		// require CLARENDON_CC_DIR . 'gapi/vendor/autoload.php'; //    $client = new Google_Client(); //    $client->setApplicationName('Chalkboard Publishing'); //    $client->setScopes(array(Google_Service_Classroom::CLASSROOM_COURSES,Google_Service_Classroom::CLASSROOM_ROSTERS,Google_Service_Classroom::CLASSROOM_TOPICS,Google_Service_Classroom::CLASSROOM_COURSEWORK_STUDENTS,Google_Service_Classroom::CLASSROOM_COURSEWORK_ME)); //    $client->setAuthConfig($_SERVER['DOCUMENT_ROOT'].'/wp-content/plugins/clarendon-gapi/credentials.json'); //    $client->setAccessType('offline'); //    $client->setPrompt('select_account consent');	$client = clientInfo();	$currentToken = get_user_meta(get_current_user_id(), "classroom_token", true);		if(isset($currentToken) && $currentToken != "")	{		$accessToken = $currentToken;		$client->setAccessToken($accessToken);		$service = new Google_Service_Classroom($client);			$optParams = array(		  'pageSize' => 10,		);		$results = $service->courses->listCourses($optParams);		$userProfiles = $service->userProfiles->get("me");		$current_url= "//".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];		$teachID = 0;		foreach ($results->getCourses() as $course) {		    $teachers = $service->courses_teachers->listCoursesTeachers($course->getId());		    foreach ($teachers->getTeachers() as $teacher) {							            $teacherUser = get_users(array('meta_key' => 'classroom_ID', 'meta_value' => $teacher->getUserId()));		            foreach ($teacherUser as $teach) {		            	# code...		            	// echo $teach->ID;		            	$teachID = $teach->ID;		            }		            // print_r($teacherUser['']);		            // echo $teacherUser;		    }					foreach ($currentCourseWork = $service->courses_courseWork->listCoursesCourseWork($course->getId()) as $cw) {				$found = false;				$permalink = get_permalink(get_the_id());				foreach ($cw->materials as $material) {					if ($material->getLink()->getUrl() == $permalink) {							$found = true;					}				}								if($cw->associatedWithDeveloper && $found)				{					// print_r($cw);					$studentSub = $service->courses_courseWork_studentSubmissions->listCoursesCourseWorkStudentSubmissions($course->getId(), $cw->getId());					foreach ($studentSub->studentSubmissions as $sub) {						$submission = $service->courses_courseWork_studentSubmissions->turnIn($course->getId(), $cw->getId(), $sub->getId(), new Google_Service_Classroom_TurnInStudentSubmissionRequest());						if(!empty($teachID))						{						    $client2 = new Google_Client();						    $client2->setApplicationName('Chalkboard Publishing');						    $client2->setScopes(array(Google_Service_Classroom::CLASSROOM_COURSES,Google_Service_Classroom::CLASSROOM_ROSTERS,Google_Service_Classroom::CLASSROOM_TOPICS,Google_Service_Classroom::CLASSROOM_COURSEWORK_STUDENTS,Google_Service_Classroom::CLASSROOM_COURSEWORK_ME));						    $client2->setAuthConfig($_SERVER['DOCUMENT_ROOT'].'/wp-content/plugins/clarendon-gapi/credentials.json');						    $client2->setAccessType('offline');						    $client2->setPrompt('select_account consent');							// $currentToken = get_user_meta(get_current_user_id(), "classroom_token", true);								$teacherToken = get_user_meta($teachID, "classroom_token", true);							if(isset($teacherToken) && $teacherToken != ""){								$accessTeacherToken = $teacherToken;								$client2->setAccessToken($accessTeacherToken);								// $client->setAccessToken($accessTeacherToken);								$TeachService = new Google_Service_Classroom($client2);									$subset = new Google_Service_Classroom_StudentSubmission();								$subset->setAssignedGrade(10);								$subset->setDraftGrade(10);								$subset->setState('TURNED_IN');  // Worked with no apparent effect								$opt = array('updateMask' => 'assignedGrade,draftGrade');								// $submissionURL = '//' . $_SERVER['HTTP_HOST'] . "/assignment-answers/?uid=". get_current_user_id() . '&quid=' . $quizID ."&tid=" . $teachID;								$ModifyAttachment = new Google_Service_Classroom_ModifyAttachmentsRequest();								$attachment = new Google_Service_Classroom_Attachment();								$link = new Google_Service_Classroom_Link();								// $link->setTitle("Submission Link");								$link->setUrl($imageUrl);								$attachment->setLink($link);								$ModifyAttachment->setAddAttachments($attachment);								$TeachService->courses_courseWork_studentSubmissions->modifyAttachments($course->getId(), $cw->getId(), $sub->getId(), $ModifyAttachment);								$userProfiles2 = $TeachService->userProfiles->get("me");								try								{								$retval = $TeachService->courses_courseWork_studentSubmissions->patch($course->getId(), $cw->getId(), $sub->getId(), $subset, $opt);									}								catch (Exception $e) {																	}								//echo $retval;							}						}					}				}			}		}	}	else {		echo "No Token.";	}}?>